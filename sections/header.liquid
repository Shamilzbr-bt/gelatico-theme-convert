{% comment %}
  Hero Slider Section
  ------------------------------
  A fullscreen hero slider with text overlay, buttons, and slide indicators
  
  Adapted from React component to Shopify Liquid template
{% endcomment %}

{{ 'section-hero-slider.css' | asset_url | stylesheet_tag }}
<script src="{{ 'section-hero-slider.js' | asset_url }}" defer="defer"></script>

<section class="hero-slider-section relative h-screen w-full overflow-hidden" data-hero-slider>
  <!-- Slides -->
  <div class="slider-container">
    {%- for block in section.blocks -%}
      {%- if block.type == 'slide' -%}
        <div class="slider-slide{% if forloop.first %} active{% endif %}" {{ block.shopify_attributes }}>
          <!-- Background Image -->
          <div class="slide-background" style="background-image: linear-gradient(to right, {{ block.settings.overlay_color_1 }}, {{ block.settings.overlay_color_2 }}), url('{{ block.settings.image | img_url: 'master' }}');">
          </div>
          
          <!-- Content -->
          <div class="slide-content-wrapper">
            <div class="slide-content">
              {%- if block.settings.subheading != blank -%}
                <span class="slide-subheading">
                  {{ block.settings.subheading | escape }}
                </span>
              {%- endif -%}
              
              {%- if block.settings.heading != blank -%}
                <h1 class="slide-heading">
                  {{ block.settings.heading | escape }}
                </h1>
              {%- endif -%}
              
              {%- if block.settings.description != blank -%}
                <p class="slide-description">
                  {{ block.settings.description | escape }}
                </p>
              {%- endif -%}
              
              <div class="slide-buttons">
                {%- if block.settings.button_label != blank -%}
                  <a href="{{ block.settings.button_url }}" class="button button-primary">
                    {{ block.settings.button_label | escape }}
                  </a>
                {%- endif -%}
                
                {%- if block.settings.button_label_2 != blank -%}
                  <a href="{{ block.settings.button_url_2 }}" class="button button-secondary">
                    {{ block.settings.button_label_2 | escape }}
                  </a>
                {%- endif -%}
              </div>
            </div>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}
  </div>
  
  <!-- Slide Indicators -->
  <div class="slide-indicators">
    {%- assign slide_count = 0 -%}
    {%- for block in section.blocks -%}
      {%- if block.type == 'slide' -%}
        {%- assign slide_count = slide_count | plus: 1 -%}
        <button 
          class="slide-indicator{% if forloop.first %} active{% endif %}" 
          data-slide-index="{{ forloop.index0 }}"
          aria-label="{{ 'sections.slideshow.slide_index' | t: count: forloop.index }}"
        ></button>
      {%- endif -%}
    {%- endfor -%}
  </div>
  
  <!-- Decorative elements -->
  {%- if section.settings.show_decorative_elements -%}
    <div class="decorative-circle decorative-circle-1"></div>
    <div class="decorative-circle decorative-circle-2"></div>
    <div class="decorative-circle decorative-circle-3"></div>
  {%- endif -%}
</section>

{% schema %}
{
  "name": "Hero Slider",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Auto-rotate slides",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 3,
      "max": 9,
      "step": 1,
      "unit": "s",
      "label": "Change slides every",
      "default": 5
    },
    {
      "type": "checkbox",
      "id": "show_decorative_elements",
      "label": "Show decorative elements",
      "default": true
    }
  ],
  "blocks": [
    {
      "name": "Slide",
      "type": "slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Background image"
        },
        {
          "type": "color",
          "id": "overlay_color_1",
          "label": "Overlay gradient start",
          "default": "rgba(255, 245, 225, 0.7)"
        },
        {
          "type": "color",
          "id": "overlay_color_2",
          "label": "Overlay gradient end",
          "default": "rgba(255, 209, 220, 0.7)"
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading",
          "default": "Handcrafted with Love"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Artisanal Gelato"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Experience the authentic taste of Italy with our premium, small-batch gelato made from the finest ingredients."
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Primary button label",
          "default": "Shop Now"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "Primary button link"
        },
        {
          "type": "text",
          "id": "button_label_2",
          "label": "Secondary button label",
          "default": "Explore Flavors"
        },
        {
          "type": "url",
          "id": "button_url_2",
          "label": "Secondary button link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Slider",
      "blocks": [
        {
          "type": "slide"
        },
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}

{% stylesheet %}
:root {
  --color-primary: #ec5c9d;
  --color-primary-light: #ffd1dc;
  --color-secondary: #a7c7e7;
  --color-accent: #fff5e1;
}

.hero-slider-section {
  position: relative;
  height: 100vh;
  width: 100%;
  overflow: hidden;
}

.slider-container {
  position: absolute;
  inset: 0;
}

.slider-slide {
  position: absolute;
  inset: 0;
  opacity: 0;
  transition: opacity 1s ease-in-out;
  pointer-events: none;
}

.slider-slide.active {
  opacity: 1;
  pointer-events: auto;
}

.slide-background {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
}

.slide-content-wrapper {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 1rem;
}

.slide-content {
  max-width: 64rem;
  margin: 0 auto;
  text-align: center;
}

.slide-subheading {
  display: inline-block;
  padding: 0.5rem 1rem;
  margin-bottom: 1rem;
  border-radius: 9999px;
  background-color: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(4px);
  color: var(--color-primary);
  font-size: 0.875rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.slide-heading {
  font-size: 3rem;
  line-height: 1.2;
  font-weight: 700;
  margin-bottom: 1.5rem;
  color: #333;
  font-family: var(--font-heading-family);
}

.slide-description {
  font-size: 1.125rem;
  line-height: 1.6;
  margin-bottom: 2rem;
  max-width: 36rem;
  margin-left: auto;
  margin-right: auto;
  color: rgba(51, 51, 51, 0.8);
}

.slide-buttons {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}

.button {
  display: inline-block;
  padding: 0.75rem 2rem;
  font-weight: 600;
  border-radius: 9999px;
  text-align: center;
  transition: all 0.3s ease;
  text-decoration: none;
  cursor: pointer;
}

.button-primary {
  background-color: var(--color-primary);
  color: white;
}

.button-primary:hover {
  background-color: #d8236a;
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.button-secondary {
  background-color: transparent;
  color: #333;
  border: 2px solid var(--color-primary);
}

.button-secondary:hover {
  background-color: rgba(255, 209, 220, 0.2);
  transform: translateY(-2px);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

.slide-indicators {
  position: absolute;
  bottom: 2rem;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 0.5rem;
  z-index: 10;
}

.slide-indicator {
  width: 0.625rem;
  height: 0.625rem;
  border-radius: 9999px;
  background-color: rgba(255, 255, 255, 0.7);
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
}

.slide-indicator.active {
  width: 2rem;
  background-color: var(--color-primary);
}

.decorative-circle {
  position: absolute;
  border-radius: 9999px;
  opacity: 0.2;
  z-index: 1;
}

.decorative-circle-1 {
  bottom: 5%;
  left: 5%;
  width: 5rem;
  height: 5rem;
  background-color: var(--color-primary);
  animation: float 6s ease-in-out infinite;
}

.decorative-circle-2 {
  top: 15%;
  right: 10%;
  width: 4rem;
  height: 4rem;
  background-color: var(--color-secondary);
  animation: pulse 6s ease-in-out infinite;
}

.decorative-circle-3 {
  top: 30%;
  left: 8%;
  width: 3rem;
  height: 3rem;
  background-color: var(--color-primary-light);
  animation: rotate 10s linear infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-20px); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.1); }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@media screen and (min-width: 768px) {
  .slide-heading {
    font-size: 4rem;
  }
  
  .slide-description {
    font-size: 1.25rem;
  }
  
  .slide-buttons {
    flex-direction: row;
  }
}

@media screen and (min-width: 1024px) {
  .slide-heading {
    font-size: 4.5rem;
  }
}
{% endstylesheet %}

{% javascript %}
document.addEventListener('DOMContentLoaded', function() {
  const sliderSection = document.querySelector('[data-hero-slider]');
  if (!sliderSection) return;
  
  const slides = sliderSection.querySelectorAll('.slider-slide');
  const indicators = sliderSection.querySelectorAll('.slide-indicator');
  const autoplay = {{ section.settings.autoplay | json }};
  const autoplaySpeed = {{ section.settings.autoplay_speed | times: 1000 | json }};
  
  let currentSlide = 0;
  let intervalId;
  
  // Function to show a specific slide
  function showSlide(index) {
    // Hide all slides and deactivate all indicators
    slides.forEach(slide => slide.classList.remove('active'));
    indicators.forEach(indicator => indicator.classList.remove('active'));
    
    // Show the selected slide and activate its indicator
    slides[index].classList.add('active');
    indicators[index].classList.add('active');
    
    // Update current slide index
    currentSlide = index;
  }
  
  // Next slide function
  function nextSlide() {
    showSlide((currentSlide + 1) % slides.length);
  }
  
  // Previous slide function
  function prevSlide() {
    showSlide((currentSlide - 1 + slides.length) % slides.length);
  }
  
  // Set up indicator clicks
  indicators.forEach((indicator, index) => {
    indicator.addEventListener('click', () => {
      showSlide(index);
      
      // Reset the autoplay timer if autoplay is enabled
      if (autoplay && intervalId) {
        clearInterval(intervalId);
        intervalId = setInterval(nextSlide, autoplaySpeed);
      }
    });
  });
  
  // Set up autoplay if enabled
  if (autoplay && slides.length > 1) {
    intervalId = setInterval(nextSlide, autoplaySpeed);
    
    // Pause autoplay on hover
    sliderSection.addEventListener('mouseenter', () => {
      clearInterval(intervalId);
    });
    
    // Resume autoplay when mouse leaves
    sliderSection.addEventListener('mouseleave', () => {
      intervalId = setInterval(nextSlide, autoplaySpeed);
    });
  }
  
  // Show the first slide initially
  showSlide(0);
});
{% endjavascript %}
